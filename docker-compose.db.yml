services:
  postgres:
    image: postgres:17-alpine
    container_name: people-ops-postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    networks:
      - db-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: people-ops-redis
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - db-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: people-ops-minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - db-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  db-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
