# People Operation and Management System - Development Environment
# This file sets up the complete development environment with all services

version: '3.8'

services:
  # Frontend Service (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - NEXT_PUBLIC_APP_NAME=People Operation and Management
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - people-ops-network

  # Backend Service (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://people_ops:dev_password@postgres:5432/people_ops_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret_key
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - people-ops-network

  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=people_ops_dev
      - POSTGRES_USER=people_ops
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - people-ops-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - people-ops-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=dev_access_key
      - MINIO_ROOT_PASSWORD=dev_secret_key
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - people-ops-network

  # NGINX Reverse Proxy (Optional for development)
  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - people-ops-network

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

# Custom network for service communication
networks:
  people-ops-network:
    driver: bridge
